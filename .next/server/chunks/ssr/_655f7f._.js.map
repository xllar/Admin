{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HomePC/Desktop/Nexus-dashboard/dashboard/src/app/nexus/notifications/page.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport NotificationCard from './NotificationCard';\r\n\r\ninterface Notification {\r\n  id: number;\r\n  title: string;\r\n  message: string;\r\n  type: string;\r\n  read: boolean;\r\n}\r\n\r\nconst NotificationPage: React.FC = () => {\r\n  const [notifications, setNotifications] = useState<Notification[]>([\r\n    {\r\n      id: 1,\r\n      title: 'Welcome!',\r\n      message: 'Thank you for joining us.',\r\n      type: 'Welcome',\r\n      read: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Maintenance Alert',\r\n      message: 'Scheduled maintenance on Jan 8th.',\r\n      type: 'Maintenance',\r\n      read: false,\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Feature Update',\r\n      message: 'New dark mode feature is live.',\r\n      type: 'Update',\r\n      read: true,\r\n    },\r\n  ]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [filterType, setFilterType] = useState('');\r\n\r\n  const handleMarkAsRead = (id: number) => {\r\n    setNotifications((prev) =>\r\n      prev.map((notif) =>\r\n        notif.id === id ? { ...notif, read: true } : notif\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleDelete = (id: number) => {\r\n    setNotifications((prev) => prev.filter((notif) => notif.id !== id));\r\n  };\r\n\r\n  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchQuery(e.target.value);\r\n  };\r\n\r\n  const handleFilterChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setFilterType(e.target.value);\r\n  };\r\n\r\n  const filteredNotifications = notifications.filter((notif) => {\r\n    const matchesSearch =\r\n      notif.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      notif.message.toLowerCase().includes(searchQuery.toLowerCase());\r\n    const matchesFilter = filterType ? notif.type === filterType : true;\r\n    return matchesSearch && matchesFilter;\r\n  });\r\n\r\n  return (\r\n    <div className=\"max-w-3xl mx-auto p-4\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Notifications</h1>\r\n      <div className=\"flex items-center space-x-4 mb-4\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search notifications...\"\r\n          value={searchQuery}\r\n          onChange={handleSearch}\r\n          className=\"p-2 border border-gray-300 rounded-md w-full focus:ring-2 focus:ring-purple-500\"\r\n        />\r\n        <select\r\n          value={filterType}\r\n          onChange={handleFilterChange}\r\n          className=\"p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-purple-500\"\r\n        >\r\n          <option value=\"\">All Types</option>\r\n          <option value=\"Welcome\">Welcome</option>\r\n          <option value=\"Maintenance\">Maintenance</option>\r\n          <option value=\"Update\">Update</option>\r\n        </select>\r\n      </div>\r\n      <ul className=\"space-y-4\">\r\n        {filteredNotifications.length > 0 ? (\r\n          filteredNotifications.map((notification) => (\r\n            <NotificationCard\r\n              key={notification.id}\r\n              id={notification.id}\r\n              title={notification.title}\r\n              message={notification.message}\r\n              type={notification.type}\r\n              read={notification.read}\r\n              onMarkAsRead={handleMarkAsRead}\r\n              onDelete={handleDelete}\r\n            />\r\n          ))\r\n        ) : (\r\n          <p className=\"text-gray-500\">No notifications found.</p>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationPage;\r\n"],"names":[],"mappings":";;;;AAAA;;;;;;;;;AAWA,MAAM,mBAA6B;IACjC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkB;QACjE;YACE,IAAI;YACJ,OAAO;YACP,SAAS;YACT,MAAM;YACN,MAAM;QACR;QACA;YACE,IAAI;YACJ,OAAO;YACP,SAAS;YACT,MAAM;YACN,MAAM;QACR;QACA;YACE,IAAI;YACJ,OAAO;YACP,SAAS;YACT,MAAM;YACN,MAAM;QACR;KACD;IACD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,MAAM,mBAAmB,CAAC;QACxB,iBAAiB,CAAC,OAChB,KAAK,GAAG,CAAC,CAAC,QACR,MAAM,EAAE,KAAK,KAAK;oBAAE,GAAG,KAAK;oBAAE,MAAM;gBAAK,IAAI;IAGnD;IAEA,MAAM,eAAe,CAAC;QACpB,iBAAiB,CAAC,OAAS,KAAK,MAAM,CAAC,CAAC,QAAU,MAAM,EAAE,KAAK;IACjE;IAEA,MAAM,eAAe,CAAC;QACpB,eAAe,EAAE,MAAM,CAAC,KAAK;IAC/B;IAEA,MAAM,qBAAqB,CAAC;QAC1B,cAAc,EAAE,MAAM,CAAC,KAAK;IAC9B;IAEA,MAAM,wBAAwB,cAAc,MAAM,CAAC,CAAC;QAClD,MAAM,gBACJ,MAAM,KAAK,CAAC,WAAW,GAAG,QAAQ,CAAC,YAAY,WAAW,OAC1D,MAAM,OAAO,CAAC,WAAW,GAAG,QAAQ,CAAC,YAAY,WAAW;QAC9D,MAAM,gBAAgB,aAAa,MAAM,IAAI,KAAK,aAAa;QAC/D,OAAO,iBAAiB;IAC1B;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBACC,MAAK;wBACL,aAAY;wBACZ,OAAO;wBACP,UAAU;wBACV,WAAU;;;;;;kCAEZ,8OAAC;wBACC,OAAO;wBACP,UAAU;wBACV,WAAU;;0CAEV,8OAAC;gCAAO,OAAM;0CAAG;;;;;;0CACjB,8OAAC;gCAAO,OAAM;0CAAU;;;;;;0CACxB,8OAAC;gCAAO,OAAM;0CAAc;;;;;;0CAC5B,8OAAC;gCAAO,OAAM;0CAAS;;;;;;;;;;;;;;;;;;0BAG3B,8OAAC;gBAAG,WAAU;0BACX,sBAAsB,MAAM,GAAG,IAC9B,sBAAsB,GAAG,CAAC,CAAC,6BACzB,8OAAC;wBAEC,IAAI,aAAa,EAAE;wBACnB,OAAO,aAAa,KAAK;wBACzB,SAAS,aAAa,OAAO;wBAC7B,MAAM,aAAa,IAAI;wBACvB,MAAM,aAAa,IAAI;wBACvB,cAAc;wBACd,UAAU;uBAPL,aAAa,EAAE;;;;8CAWxB,8OAAC;oBAAE,WAAU;8BAAgB;;;;;;;;;;;;;;;;;AAKvC;uCAEe"}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HomePC/Desktop/Nexus-dashboard/dashboard/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;wBACVC,IAAAA;oBAAAA,CAAMZ,UAAUa;oBAAAA,EAAQ;gCACxBC,IAAAA;4BAAAA,CAAM;4BAAA;iCACNC,UAAU;sCACV,IAAA,CAAA;gCAAA,QAAA;oCAAA,IAAA,iBAA2C;oCAAA;iCAAA;;+BAC3CC,YAAY;;yBACZC,UAAU;8BACVC,IAAAA,CAAAA;oBAAAA,CAAU;iBAAA,CAAE;;aACd;kBACAC,QAAAA,CAAU,CAAA;YAAA;SAAA;;SACRC,YAAYnB;UACd,QAAA;YAAA,MAAA;gBACA,OAAA,QAAA;wBAAA","ignoreList":[0]}},
    {"offset": {"line": 305, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}
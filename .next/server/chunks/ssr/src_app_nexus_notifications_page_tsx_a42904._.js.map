{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HomePC/Desktop/Nexus-dashboard/dashboard/src/app/nexus/notifications/page.tsx"],"sourcesContent":["'use client'\r\nimport React, { useState } from 'react';\r\nimport { Card, Typography, List, ListItem, ListItemText, ListItemIcon, Badge, Button, Divider } from '@mui/material';\r\nimport { NotificationImportant, ShoppingCart, Feedback, Done, Delete } from '@mui/icons-material';\r\n\r\nexport default function Notifications() {\r\n  const [notifications, setNotifications] = useState([\r\n    { id: 1, message: 'New order received!', time: '2 minutes ago', icon: <ShoppingCart />, color: '#1976D2', status: 'New' },\r\n    { id: 2, message: 'Customer feedback posted.', time: '1 hour ago', icon: <Feedback />, color: '#4CAF50', status: 'Resolved' },\r\n    { id: 3, message: 'Product restock available.', time: '3 hours ago', icon: <NotificationImportant />, color: '#FF9800', status: 'Urgent' },\r\n  ]);\r\n\r\n  const markAllAsRead = () => {\r\n    setNotifications((prev) => prev.map((notif) => ({ ...notif, status: 'Read' })));\r\n  };\r\n\r\n  const deleteNotification = (id) => {\r\n    setNotifications((prev) => prev.filter((notif) => notif.id !== id));\r\n  };\r\n\r\n  return (\r\n    <section className=\"bg-white rounded-lg shadow-lg p-6 mb-6\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <Typography variant=\"h6\" sx={{ fontWeight: 600, color: '#333' }}>\r\n          Notifications\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"small\"\r\n          sx={{ backgroundColor: '#1976D2', color: '#fff', '&:hover': { backgroundColor: '#115293' } }}\r\n          onClick={markAllAsRead}\r\n        >\r\n          Mark All as Read\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Subheader */}\r\n      <Typography variant=\"body2\" sx={{ color: 'text.secondary', mb: 4 }}>\r\n        Stay updated with the latest alerts and messages.\r\n      </Typography>\r\n\r\n      {/* Notifications List */}\r\n      <Card sx={{ maxHeight: 300, overflowY: 'auto', padding: 2, borderRadius: '10px' }}>\r\n        <List>\r\n          {notifications.map((notification) => (\r\n            <ListItem\r\n              key={notification.id}\r\n              sx={{\r\n                borderBottom: '1px solid #f0f0f0',\r\n                paddingY: 1.5,\r\n                borderRadius: '8px',\r\n                '&:hover': {\r\n                  backgroundColor: '#f1f8ff',\r\n                  cursor: 'pointer',\r\n                  boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n                  transform: 'scale(1.02)',\r\n                },\r\n              }}\r\n            >\r\n              {/* Icon */}\r\n              <ListItemIcon sx={{ minWidth: 40, display: 'flex', justifyContent: 'center' }}>\r\n                <Badge\r\n                  color={notification.status === 'Urgent' ? 'error' : notification.status === 'New' ? 'primary' : 'default'}\r\n                  variant=\"dot\"\r\n                  sx={{ marginRight: 1 }}\r\n                >\r\n                  {React.cloneElement(notification.icon, {\r\n                    sx: { color: notification.color, fontSize: 30, backgroundColor: '#ffffff', padding: '5px', borderRadius: '50%' },\r\n                  })}\r\n                </Badge>\r\n              </ListItemIcon>\r\n\r\n              {/* Message */}\r\n              <ListItemText\r\n                primary={\r\n                  <Typography variant=\"body1\" sx={{ fontWeight: 600, color: '#333' }}>\r\n                    {notification.message}\r\n                  </Typography>\r\n                }\r\n                secondary={\r\n                  <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                    {notification.time}\r\n                  </Typography>\r\n                }\r\n                sx={{ paddingRight: 2 }}\r\n              />\r\n\r\n              {/* Actions */}\r\n              <div className=\"flex items-center space-x-2\">\r\n                {notification.status !== 'Resolved' && (\r\n                  <Button\r\n                    size=\"small\"\r\n                    sx={{ color: '#4CAF50', '&:hover': { backgroundColor: '#E8F5E9' } }}\r\n                    onClick={() =>\r\n                      setNotifications((prev) =>\r\n                        prev.map((notif) =>\r\n                          notif.id === notification.id ? { ...notif, status: 'Resolved' } : notif\r\n                        )\r\n                      )\r\n                    }\r\n                  >\r\n                    <Done fontSize=\"small\" />\r\n                  </Button>\r\n                )}\r\n                <Button\r\n                  size=\"small\"\r\n                  sx={{ color: '#F44336', '&:hover': { backgroundColor: '#FFEBEE' } }}\r\n                  onClick={() => deleteNotification(notification.id)}\r\n                >\r\n                  <Delete fontSize=\"small\" />\r\n                </Button>\r\n              </div>\r\n            </ListItem>\r\n          ))}\r\n\r\n          {/* No Notifications */}\r\n          {notifications.length === 0 && (\r\n            <Typography variant=\"body2\" sx={{ color: 'text.secondary', textAlign: 'center', mt: 4 }}>\r\n              No notifications available.\r\n            </Typography>\r\n          )}\r\n        </List>\r\n      </Card>\r\n    </section>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 311, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}
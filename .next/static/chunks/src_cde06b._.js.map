{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HomePC/Desktop/Nexus-dashboard/dashboard/src/components/sidebar/brandlogo.tsx"],"sourcesContent":["\r\nexport default function BrandLogo() {\r\n    return (\r\n      <div className=\"flex items-center mb-6 mt-6 space-x-4\">\r\n        <div className=\"w-12 h-12 bg-gradient-to-r from-purple-600 to-indigo-600 rounded-full flex items-center justify-center shadow-lg\">\r\n          <span className=\"text-white text-3xl font-extrabold\">N</span>\r\n        </div>\r\n        <h1 className=\"text-3xl font-semibold text-gray-900 tracking-tight capitalize\">\r\n          Nexus\r\n        </h1>\r\n      </div>\r\n    );\r\n  }\r\n  "],"names":[],"mappings":";;;;;AACe,SAAS;IACpB,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAK,WAAU;8BAAqC;;;;;;;;;;;0BAEvD,6LAAC;gBAAG,WAAU;0BAAiE;;;;;;;;;;;;AAKrF;KAXsB"}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HomePC/Desktop/Nexus-dashboard/dashboard/src/components/sidebar/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState } from \"react\";\r\n\r\nimport {\r\n  Home,\r\n  Settings,\r\n  HelpCircle,\r\n  LogOut,\r\n  ChevronRight,\r\n  ChevronDown,\r\n  ShoppingCart,\r\n  Package,\r\n  UserCheck,\r\n  BarChart,\r\n  Layers,\r\n  Tag,\r\n  Truck,\r\n  CreditCard,\r\n  Palette,\r\n  User,\r\n  Bell,\r\n} from \"lucide-react\";\r\nimport BrandLogo from \"./brandlogo\";\r\n\r\n\r\nexport default function Sidebar() {\r\n  const [isSidebarOpen, setSidebarOpen] = useState(false);\r\n  const [isMobileMenuOpen, setMobileMenuOpen] = useState(false);\r\n  const [activeSubmenu, setActiveSubmenu] = useState<string | null>(null);\r\n  const [activeMobileSubmenu, setActiveMobileSubmenu] = useState<string | null>(null);\r\n\r\n  const toggleSubmenu = (menu: string) => {\r\n    setActiveSubmenu(activeSubmenu === menu ? null : menu);\r\n  };\r\n\r\n  const toggleMobileSubmenu = (menu: string) => {\r\n    setActiveMobileSubmenu(activeMobileSubmenu === menu ? null : menu);\r\n  };\r\n\r\n  const menus = [\r\n    { name: \"Dashboard\", icon: Home, submenu: [{ name: \"Overview\", link: \"/#\" },\r\n      { name: \"Sales Stats\", link: \"/dashboard/sales-stats\" },\r\n      { name: \"Order Summary\", link: \"/dashboard/order-summary\" },\r\n    ] },\r\n    { name: \"Orders\", icon: ShoppingCart, submenu: [\r\n      { name: \"All Orders\", link: \"/orders/all-orders\" },\r\n      { name: \"Pending Orders\", link: \"/orders/pending-orders\" },\r\n      { name: \"Completed Orders\", link: \"/orders/completed-orders\" },\r\n      { name: \"Order History\", link: \"/orders/order-history\" },\r\n    ] },\r\n    { name: \"Products\", icon: Package, submenu: [\r\n      { name: \"All Products\", link: \"/products/all-products\" },\r\n      { name: \"Add New Product\", link: \"/products/add-new-product\" },\r\n      { name: \"Product Categories\", link: \"/products/product-categories\" },\r\n      { name: \"Inventory Management\", link: \"/products/inventory-management\" },\r\n    ] },\r\n    { name: \"Customers\", icon: UserCheck, submenu: [\r\n      { name: \"All Customers\", link: \"/customers/all-customers\" },\r\n      { name: \"Add New Customer\", link: \"/customers/add-new-customer\" },\r\n      { name: \"Customer Groups\", link: \"/customers/customer-groups\" },\r\n      { name: \"Customer Activity\", link: \"/customers/customer-activity\" },\r\n    ]},\r\n    { name: \"Analytics/Reports\", icon: BarChart, submenu: [\r\n      { name: \"Sales Reports\", link: \"/analytics/sales-reports\" },\r\n      { name: \"Traffic Reports\", link: \"/analytics/traffic-reports\" },\r\n      { name: \"Product Performance\", link: \"/analytics/product-performance\" },\r\n      { name: \"Customer Reports\", link: \"/analytics/customer-reports\" },\r\n    ] },\r\n    { name: \"Categories\", icon: Layers, submenu: [\r\n      { name: \"All Categories\", link: \"/categories/all-categories\" },\r\n      { name: \"Add New Category\", link: \"/categories/add-new-category\" },\r\n      { name: \"Category Analytics\", link: \"/categories/category-analytics\" },\r\n    ]},\r\n    { name: \"Coupons/Discounts\", icon: Tag, submenu: [\r\n      { name: \"Active Coupons\", link: \"/coupons/active-coupons\" },\r\n      { name: \"Create New Coupon\", link: \"/coupons/create-new-coupon\" },\r\n      { name: \"Expired Coupons\", link: \"/coupons/expired-coupons\" },\r\n      { name: \"Discount Campaigns\", link: \"/coupons/discount-campaigns\" },\r\n    ] },\r\n    { name: \"Shipping\", icon: Truck, submenu: [\r\n      { name: \"Shipping Methods\", link: \"/shipping/shipping-methods\" },\r\n      { name: \"Rates and Fees\", link: \"/shipping/rates-fees\" },\r\n      { name: \"Shipping Labels\", link: \"/shipping/shipping-labels\" },\r\n      { name: \"Tracking\", link: \"/shipping/tracking\" },\r\n    ] },\r\n    { name: \"Payments\", icon: CreditCard, submenu: [\r\n      { name: \"Payment Gateways\", link: \"/payments/payment-gateways\" },\r\n      { name: \"Transaction History\", link: \"/payments/transaction-history\" },\r\n      { name: \"Refunds\", link: \"/payments/refunds\" },\r\n      { name: \"Payment Settings\", link: \"/payments/payment-settings\" },\r\n    ]},\r\n    { name: \"Settings\", icon: Settings, submenu: [\r\n      { name: \"Store Settings\", link: \"/settings/store-settings\" },\r\n      { name: \"Payment Settings\", link: \"/settings/payment-settings\" },\r\n      { name: \"Tax Settings\", link: \"/settings/tax-settings\" },\r\n      { name: \"Shipping Settings\", link: \"/settings/shipping-settings\" },\r\n    ]},\r\n    { name: \"Theme Customization\", icon: Palette, submenu: [\r\n      { name: \"Change Theme\", link: \"/theme/customize-theme\" },\r\n      { name: \"Customize Colors\", link: \"/theme/customize-colors\" },\r\n      { name: \"Manage Fonts\", link: \"/theme/manage-fonts\" },\r\n    ] },\r\n    { name: \"User Profile\", icon: User, submenu: [], link: \"/user-profile\" },\r\n    { name: \"Notifications\", icon: Bell, submenu: [], link: \"/notifications\" },\r\n    { name: \"Help & Support\", icon: HelpCircle, submenu: [\r\n      { name: \"Documentation\", link: \"/help/documentation\" },\r\n      { name: \"Contact Support\", link: \"/help/contact-support\" },\r\n      { name: \"FAQ\", link: \"/help/faq\" },\r\n    ] },\r\n    { name: \"Logout\", icon: LogOut, submenu: [], link: \"/logout\" },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"relative flex\">\r\n      {/* Sidebar for Medium and Larger Screens */}\r\n      <div\r\n        className={`bg-white shadow-lg transform transition-all duration-300 ${\r\n          isSidebarOpen ? \"w-64\" : \"w-16\"\r\n        } hidden md:block`}\r\n      >\r\n        <div className=\"h-full flex flex-col items-center md:items-start\">\r\n          {isSidebarOpen && <div className=\"mb-4 mt-4\"><BrandLogo /></div>}\r\n          <ul className={`space-y-4 w-full ${isSidebarOpen ? \"pl-2\" : \"mt-16\"} flex flex-col`}>\r\n            {menus.map((menu) => (\r\n              <li key={menu.name} className=\"w-full\">\r\n                <div\r\n                  className={`flex items-center ${\r\n                    isSidebarOpen ? \"space-x-2\" : \"justify-center\"\r\n                  } cursor-pointer`}\r\n                  onClick={() => toggleSubmenu(menu.name)}\r\n                >\r\n                  <menu.icon className=\"w-5 h-5 text-gray-600\" />\r\n                  {isSidebarOpen && (\r\n                    <>\r\n                      <a href={menu.link} className=\"text-gray-700\">{menu.name}</a>\r\n                      {menu.submenu && (\r\n                        <>\r\n                          {activeSubmenu === menu.name ? (\r\n                            <ChevronDown className=\"w-4 h-4 text-gray-600\" />\r\n                          ) : (\r\n                            <ChevronRight className=\"w-4 h-4 text-gray-600\" />\r\n                          )}\r\n                        </>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </div>\r\n                {menu.submenu && activeSubmenu === menu.name && isSidebarOpen && (\r\n                  <ul className=\"pl-8 space-y-2 mt-2 text-sm text-gray-600\">\r\n                    {menu.submenu.map((subitem) => (\r\n                      <li key={subitem.name}>\r\n                        <a href={subitem.link} className=\"block\">{subitem.name}</a>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Mobile Menu */}\r\n      <div\r\n        className={`fixed inset-0 bg-black bg-opacity-50 md:hidden ${isMobileMenuOpen ? \"block\" : \"hidden\"}`}\r\n      >\r\n        <div className=\"bg-white p-6 space-y-4\">\r\n          {/* Close Button */}\r\n          <button\r\n            onClick={() => setMobileMenuOpen(false)}\r\n            className=\"text-gray-600 hover:text-gray-900 mb-4\"\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n            </svg>\r\n          </button>\r\n          <div><BrandLogo /></div>\r\n          {/* Menu List */}\r\n          <ul className=\"space-y-4\">\r\n            {menus.map((menu) => (\r\n              <li key={menu.name}>\r\n                <div\r\n                  className=\"flex justify-between items-center cursor-pointer\"\r\n                  onClick={() => toggleMobileSubmenu(menu.name)}\r\n                >\r\n                  {/* Menu Name */}\r\n                  <span className=\"text-gray-700 flex items-center\">\r\n                    <menu.icon className=\"w-5 h-5 mr-2 text-gray-600\" /> {menu.name}\r\n                  </span>\r\n\r\n                  {/* Arrow Icon */}\r\n                  {menu.submenu && (\r\n                    <span>\r\n                      {activeMobileSubmenu === menu.name ? (\r\n                        <ChevronDown className=\"w-4 h-4 text-gray-600\" />\r\n                      ) : (\r\n                        <ChevronRight className=\"w-4 h-4 text-gray-600\" />\r\n                      )}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Submenu Items */}\r\n                {menu.submenu && activeMobileSubmenu === menu.name && (\r\n                  <ul className=\"pl-6 space-y-2 mt-2 text-sm text-gray-600\">\r\n                    {menu.submenu.map((subitem) => (\r\n                      <li key={subitem.name}>\r\n                        <a href={subitem.link} className=\"flex items-center\">\r\n                          <ChevronRight className=\"w-3 h-3 mr-2 text-gray-500\" />\r\n                          {subitem.name}\r\n                        </a>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Menu Icon for Small Screens */}\r\n      <button\r\n        onClick={() => setMobileMenuOpen(!isMobileMenuOpen)}\r\n        className=\"absolute top-7 left-4 text-gray-600 hover:text-gray-900 md:hidden z-10\"\r\n      >\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16m-7 6h7\" />\r\n        </svg>\r\n      </button>\r\n\r\n      {/* Large Screen Sidebar Toggle Button */}\r\n      <button\r\n        onClick={() => setSidebarOpen(!isSidebarOpen)}\r\n        className=\"hidden md:block text-gray-600 hover:text-gray-900 absolute top-4 right-4 z-10\"\r\n      >\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16m-7 6h7\" />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 702, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 708, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HomePC/Desktop/Nexus-dashboard/dashboard/src/components/content/revenueupdate.tsx"],"sourcesContent":["'use client'\r\nimport React from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Avatar,\r\n  useTheme,\r\n} from '@mui/material';\r\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney';\r\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\r\n\r\nexport default function RevenueUpdate() {\r\n  const theme = useTheme();\r\n\r\n  const salesData = [\r\n    {\r\n      label: 'Online Sales',\r\n      value: 80000,\r\n      percentage: '65% of total',\r\n    },\r\n    {\r\n      label: 'In-Store Sales',\r\n      value: 44567,\r\n      percentage: '35% of total',\r\n    },\r\n  ];\r\n\r\n  const chartData = [\r\n    { name: 'Online', Revenue: 80000 },\r\n    { name: 'In-Store', Revenue: 44567 },\r\n  ];\r\n\r\n  return (\r\n    <Box\r\n      component=\"section\"\r\n      sx={{\r\n        backgroundColor: 'background.paper',\r\n        boxShadow: 3,\r\n        borderRadius: 3,\r\n        p: 4,\r\n        mb: 4,\r\n      }}\r\n    >\r\n      <Typography variant=\"h6\" sx={{ fontWeight: 600, mb: 2 }}>\r\n        Revenue Update\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        {/* Revenue Chart */}\r\n        <Grid item xs={12} md={6}>\r\n          <Paper\r\n            sx={{\r\n              height: 240,\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              backgroundColor: theme.palette.grey[100],\r\n              borderRadius: 2,\r\n            }}\r\n          >\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n              <BarChart data={chartData}>\r\n                <XAxis dataKey=\"name\" stroke={theme.palette.text.secondary} />\r\n                <YAxis stroke={theme.palette.text.secondary} />\r\n                <Tooltip />\r\n                <Bar dataKey=\"Revenue\" fill={theme.palette.primary.main} barSize={40} />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        {/* Revenue Details */}\r\n        <Grid item xs={12} md={6}>\r\n          <List>\r\n            {salesData.map(({ label, value, percentage }, index) => (\r\n              <ListItem\r\n                key={index}\r\n                sx={{\r\n                  mb: 2,\r\n                  p: 2,\r\n                  backgroundColor: theme.palette.grey[50],\r\n                  boxShadow: 1,\r\n                  borderRadius: 2,\r\n                }}\r\n              >\r\n                <Avatar\r\n                  sx={{\r\n                    backgroundColor: theme.palette.primary.main,\r\n                    color: 'white',\r\n                    mr: 2,\r\n                  }}\r\n                >\r\n                  <AttachMoneyIcon />\r\n                </Avatar>\r\n                <ListItemText\r\n                  primary={\r\n                    <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                      {label}\r\n                    </Typography>\r\n                  }\r\n                  secondary={\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      {percentage}\r\n                    </Typography>\r\n                  }\r\n                />\r\n                <Typography variant=\"h6\" sx={{ fontWeight: 600, color: 'text.primary' }}>\r\n                  ${value.toLocaleString()}\r\n                </Typography>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AAAA;AAAA;AAWA;AAXA;;;AAFA;;;;AAgBe,SAAS;;IACtB,MAAM,QAAQ,CAAA,GAAA,iMAAA,CAAA,WAAQ,AAAD;IAErB,MAAM,YAAY;QAChB;YACE,OAAO;YACP,OAAO;YACP,YAAY;QACd;QACA;YACE,OAAO;YACP,OAAO;YACP,YAAY;QACd;KACD;IAED,MAAM,YAAY;QAChB;YAAE,MAAM;YAAU,SAAS;QAAM;QACjC;YAAE,MAAM;YAAY,SAAS;QAAM;KACpC;IAED,qBACE,6LAAC,oLAAA,CAAA,MAAG;QACF,WAAU;QACV,IAAI;YACF,iBAAiB;YACjB,WAAW;YACX,cAAc;YACd,GAAG;YACH,IAAI;QACN;;0BAEA,6LAAC,yMAAA,CAAA,aAAU;gBAAC,SAAQ;gBAAK,IAAI;oBAAE,YAAY;oBAAK,IAAI;gBAAE;0BAAG;;;;;;0BAGzD,6LAAC,uLAAA,CAAA,OAAI;gBAAC,SAAS;gBAAC,SAAS;;kCAEvB,6LAAC,uLAAA,CAAA,OAAI;wBAAC,IAAI;wBAAC,IAAI;wBAAI,IAAI;kCACrB,cAAA,6LAAC,0LAAA,CAAA,QAAK;4BACJ,IAAI;gCACF,QAAQ;gCACR,SAAS;gCACT,gBAAgB;gCAChB,YAAY;gCACZ,iBAAiB,MAAM,OAAO,CAAC,IAAI,CAAC,IAAI;gCACxC,cAAc;4BAChB;sCAEA,cAAA,6LAAC,sKAAA,CAAA,sBAAmB;gCAAC,OAAM;gCAAO,QAAO;0CACvC,cAAA,6LAAC,uJAAA,CAAA,WAAQ;oCAAC,MAAM;;sDACd,6LAAC,wJAAA,CAAA,QAAK;4CAAC,SAAQ;4CAAO,QAAQ,MAAM,OAAO,CAAC,IAAI,CAAC,SAAS;;;;;;sDAC1D,6LAAC,wJAAA,CAAA,QAAK;4CAAC,QAAQ,MAAM,OAAO,CAAC,IAAI,CAAC,SAAS;;;;;;sDAC3C,6LAAC,0JAAA,CAAA,UAAO;;;;;sDACR,6LAAC,sJAAA,CAAA,MAAG;4CAAC,SAAQ;4CAAU,MAAM,MAAM,OAAO,CAAC,OAAO,CAAC,IAAI;4CAAE,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAO1E,6LAAC,uLAAA,CAAA,OAAI;wBAAC,IAAI;wBAAC,IAAI;wBAAI,IAAI;kCACrB,cAAA,6LAAC,uLAAA,CAAA,OAAI;sCACF,UAAU,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE,sBAC5C,6LAAC,mMAAA,CAAA,WAAQ;oCAEP,IAAI;wCACF,IAAI;wCACJ,GAAG;wCACH,iBAAiB,MAAM,OAAO,CAAC,IAAI,CAAC,GAAG;wCACvC,WAAW;wCACX,cAAc;oCAChB;;sDAEA,6LAAC,6LAAA,CAAA,SAAM;4CACL,IAAI;gDACF,iBAAiB,MAAM,OAAO,CAAC,OAAO,CAAC,IAAI;gDAC3C,OAAO;gDACP,IAAI;4CACN;sDAEA,cAAA,6LAAC,mKAAA,CAAA,UAAe;;;;;;;;;;sDAElB,6LAAC,+MAAA,CAAA,eAAY;4CACX,uBACE,6LAAC,yMAAA,CAAA,aAAU;gDAAC,SAAQ;gDAAQ,IAAI;oDAAE,YAAY;gDAAI;0DAC/C;;;;;;4CAGL,yBACE,6LAAC,yMAAA,CAAA,aAAU;gDAAC,SAAQ;gDAAQ,OAAM;0DAC/B;;;;;;;;;;;sDAIP,6LAAC,yMAAA,CAAA,aAAU;4CAAC,SAAQ;4CAAK,IAAI;gDAAE,YAAY;gDAAK,OAAO;4CAAe;;gDAAG;gDACrE,MAAM,cAAc;;;;;;;;mCA/BnB;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCrB;GAxGwB;;QACR,iMAAA,CAAA,WAAQ;;;KADA"}},
    {"offset": {"line": 965, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 971, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HomePC/Desktop/Nexus-dashboard/dashboard/src/components/content/profit-loss-summary.tsx"],"sourcesContent":["'use client'\r\nimport React from 'react';\r\nimport { Card, CardContent, Typography, Box } from '@mui/material';\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from 'recharts';\r\n\r\nconst data = [\r\n  { month: 'Jan', profit: 4000, loss: 2400 },\r\n  { month: 'Feb', profit: 3000, loss: 1398 },\r\n  { month: 'Mar', profit: 2000, loss: 9800 },\r\n  { month: 'Apr', profit: 2780, loss: 3908 },\r\n  { month: 'May', profit: 1890, loss: 4800 },\r\n  { month: 'Jun', profit: 2390, loss: 3800 },\r\n  { month: 'Jul', profit: 3490, loss: 4300 },\r\n];\r\n\r\nexport default function ProfitLossSummary() {\r\n  return (\r\n    <Card sx={{ borderRadius: 2, boxShadow: 3, mb: 4 }}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" component=\"h2\" sx={{ mb: 2, fontWeight: 'bold' }}>\r\n          Profit/Loss Summary\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" sx={{ mb: 3 }}>\r\n          Financial performance overview with graphs below.\r\n        </Typography>\r\n\r\n        {/* Graph Section */}\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n          <LineChart data={data}>\r\n            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n            <XAxis dataKey=\"month\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Line type=\"monotone\" dataKey=\"profit\" stroke=\"#4caf50\" name=\"Profit\" />\r\n            <Line type=\"monotone\" dataKey=\"loss\" stroke=\"#f44336\" name=\"Loss\" />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n\r\n        {/* Optional: Add more information or styling */}\r\n        <Box sx={{ mt: 2, textAlign: 'center', color: 'gray' }}>\r\n          <Typography variant=\"body2\">\r\n            The graph above shows the profit and loss summary over the last 6 months.\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;;;;AAKA,MAAM,OAAO;IACX;QAAE,OAAO;QAAO,QAAQ;QAAM,MAAM;IAAK;IACzC;QAAE,OAAO;QAAO,QAAQ;QAAM,MAAM;IAAK;IACzC;QAAE,OAAO;QAAO,QAAQ;QAAM,MAAM;IAAK;IACzC;QAAE,OAAO;QAAO,QAAQ;QAAM,MAAM;IAAK;IACzC;QAAE,OAAO;QAAO,QAAQ;QAAM,MAAM;IAAK;IACzC;QAAE,OAAO;QAAO,QAAQ;QAAM,MAAM;IAAK;IACzC;QAAE,OAAO;QAAO,QAAQ;QAAM,MAAM;IAAK;CAC1C;AAEc,SAAS;IACtB,qBACE,6LAAC,uLAAA,CAAA,OAAI;QAAC,IAAI;YAAE,cAAc;YAAG,WAAW;YAAG,IAAI;QAAE;kBAC/C,cAAA,6LAAC,4MAAA,CAAA,cAAW;;8BACV,6LAAC,yMAAA,CAAA,aAAU;oBAAC,SAAQ;oBAAK,WAAU;oBAAK,IAAI;wBAAE,IAAI;wBAAG,YAAY;oBAAO;8BAAG;;;;;;8BAG3E,6LAAC,yMAAA,CAAA,aAAU;oBAAC,SAAQ;oBAAQ,OAAM;oBAAgB,IAAI;wBAAE,IAAI;oBAAE;8BAAG;;;;;;8BAKjE,6LAAC,sKAAA,CAAA,sBAAmB;oBAAC,OAAM;oBAAO,QAAQ;8BACxC,cAAA,6LAAC,wJAAA,CAAA,YAAS;wBAAC,MAAM;;0CACf,6LAAC,gKAAA,CAAA,gBAAa;gCAAC,QAAO;gCAAO,iBAAgB;;;;;;0CAC7C,6LAAC,wJAAA,CAAA,QAAK;gCAAC,SAAQ;;;;;;0CACf,6LAAC,wJAAA,CAAA,QAAK;;;;;0CACN,6LAAC,0JAAA,CAAA,UAAO;;;;;0CACR,6LAAC,uJAAA,CAAA,OAAI;gCAAC,MAAK;gCAAW,SAAQ;gCAAS,QAAO;gCAAU,MAAK;;;;;;0CAC7D,6LAAC,uJAAA,CAAA,OAAI;gCAAC,MAAK;gCAAW,SAAQ;gCAAO,QAAO;gCAAU,MAAK;;;;;;;;;;;;;;;;;8BAK/D,6LAAC,oLAAA,CAAA,MAAG;oBAAC,IAAI;wBAAE,IAAI;wBAAG,WAAW;wBAAU,OAAO;oBAAO;8BACnD,cAAA,6LAAC,yMAAA,CAAA,aAAU;wBAAC,SAAQ;kCAAQ;;;;;;;;;;;;;;;;;;;;;;AAOtC;KAhCwB"}},
    {"offset": {"line": 1160, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1166, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HomePC/Desktop/Nexus-dashboard/dashboard/src/components/content/realtimeinsight.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\n'use client';\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Button,\r\n  Tooltip,\r\n  CircularProgress,\r\n} from '@mui/material';\r\nimport { LineChart } from '@mui/x-charts/LineChart';\r\nimport { BarChart } from '@mui/x-charts/BarChart';\r\nimport { Gauge } from '@mui/x-charts/Gauge';\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\n\r\nconst RealTimeInsights: React.FC = () => {\r\n  const [timeRange, setTimeRange] = useState('monthly');\r\n  const [sales, setSales] = useState<any[]>([]);\r\n  const [revenue, setRevenue] = useState<any[]>([]);\r\n  const [lastUpdated, setLastUpdated] = useState(new Date());\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Simulate API data fetching\r\n  const fetchData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      // Simulated data fetch logic\r\n      const mockSales = Array.from({ length: 12 }, (_, i) => ({\r\n        x: `2024-01-${i + 1}`,\r\n        y: Math.random() * 1000,\r\n      }));\r\n      const mockRevenue = Array.from({ length: 12 }, (_, i) => ({\r\n        x: `2024-01-${i + 1}`,\r\n        y: Math.random() * 5000,\r\n      }));\r\n\r\n      setSales(mockSales);\r\n      setRevenue(mockRevenue);\r\n      setLastUpdated(new Date());\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const interval = setInterval(fetchData, 10000); // Fetch data every 10 seconds\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const handleRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  return (\r\n    <Box\r\n  sx={{\r\n    p: { xs: 2, md: 4 },\r\n    backgroundColor: 'background.default',\r\n    minHeight: '100vh',\r\n    color: 'text.primary',\r\n  }}\r\n>\r\n  <Typography variant=\"h4\" gutterBottom sx={{ fontWeight: 600, color: 'primary.main' }}>\r\n    Real-Time Insights\r\n  </Typography>\r\n\r\n  <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 4 }}>\r\n    <FormControl size=\"small\" sx={{ minWidth: 150 }}>\r\n      <br />\r\n      <InputLabel id=\"time-range-label\">Time Range</InputLabel>\r\n      <Select\r\n        labelId=\"time-range-label\"\r\n        value={timeRange}\r\n        onChange={(e) => setTimeRange(e.target.value)}\r\n        sx={{ backgroundColor: 'background.paper' }}\r\n      >\r\n        <MenuItem value=\"daily\">Daily</MenuItem>\r\n        <MenuItem value=\"weekly\">Weekly</MenuItem>\r\n        <MenuItem value=\"monthly\">Monthly</MenuItem>\r\n        <MenuItem value=\"yearly\">Yearly</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n    <Tooltip title=\"Refresh Data\">\r\n      <Button\r\n        variant=\"outlined\"\r\n        startIcon={<RefreshIcon />}\r\n        onClick={handleRefresh}\r\n        disabled={loading}\r\n        sx={{ color: 'secondary.main', borderColor: 'secondary.main' }}\r\n      >\r\n        {loading ? <CircularProgress size={24} /> : 'Refresh'}\r\n      </Button>\r\n    </Tooltip>\r\n    <Typography variant=\"body2\" color=\"text.secondary\">\r\n      Last updated: {lastUpdated.toLocaleTimeString()}\r\n    </Typography>\r\n  </Box>\r\n\r\n  <Grid container spacing={4}>\r\n    <Grid item xs={12} md={6}>\r\n      <Card\r\n        sx={{\r\n          borderRadius: 3,\r\n          boxShadow: 3,\r\n          transition: 'transform 0.3s',\r\n          '&:hover': { transform: 'scale(1.02)' },\r\n          color: 'text.primary',\r\n        }}\r\n      >\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Monthly Sales\r\n          </Typography>\r\n          <Divider sx={{ mb: 2, borderColor: 'primary.main' }} />\r\n          <LineChart\r\n            xAxis={[{ data: sales.map((d) => d.x) }]}\r\n            series={[\r\n              {\r\n                data: sales.map((d) => d.y),\r\n                color: '#4caf50', // Line color: green\r\n              },\r\n            ]}\r\n            width={400}\r\n            height={300}\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n\r\n    <Grid item xs={12} md={6}>\r\n      <Card\r\n        sx={{\r\n          borderRadius: 3,\r\n          boxShadow: 3,\r\n          transition: 'transform 0.3s',\r\n          '&:hover': { transform: 'scale(1.02)' },\r\n          color: 'text.primary',\r\n        }}\r\n      >\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Monthly Revenue\r\n          </Typography>\r\n          <Divider sx={{ mb: 2, borderColor: 'primary.main' }} />\r\n          <BarChart\r\n            xAxis={[{ data: revenue.map((d) => d.x), scaleType: 'band' }]}\r\n            series={[{ data: revenue.map((d) => d.y), color: '#ff5722' }]} \r\n            width={400}\r\n            height={300}\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n\r\n    <Grid item xs={12}>\r\n      <Card\r\n        sx={{\r\n          borderRadius: 3,\r\n          boxShadow: 3,\r\n          p: 3,\r\n          display: 'flex',\r\n          justifyContent: 'space-evenly',\r\n          flexWrap: 'wrap',\r\n          backgroundColor: 'primary.light',\r\n          color: 'text.primary',\r\n        }}\r\n      >\r\n        {[{ label: 'Sales Target', value: 75 }, { label: 'Revenue Growth', value: 50 }, { label: 'Active Users', value: 65 }].map(\r\n          (gauge, index) => (\r\n            <Box key={index} sx={{ textAlign: 'center', m: 2 }}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                {gauge.label}\r\n              </Typography>\r\n              <Gauge\r\n                width={120}\r\n                height={120}\r\n                value={gauge.value}\r\n                valueMin={0}\r\n                valueMax={100}\r\n                sx={{ color: 'primary.main' }}\r\n              />\r\n            </Box>\r\n          )\r\n        )}\r\n      </Card>\r\n    </Grid>\r\n  </Grid>\r\n</Box>\r\n\r\n  );\r\n};\r\n\r\nexport default RealTimeInsights;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1633, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}